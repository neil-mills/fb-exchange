{"id":"node_modules/scmp/index.js","dependencies":[{"name":"/Users/neilmills/fb-trading-point/package.json","includedInParent":true,"mtime":1586261839335},{"name":"/Users/neilmills/fb-trading-point/node_modules/scmp/package.json","includedInParent":true,"mtime":1586177389157},{"name":"crypto","loc":{"line":3,"column":23},"parent":"/Users/neilmills/fb-trading-point/node_modules/scmp/index.js","resolved":"/Users/neilmills/fb-trading-point/node_modules/crypto-browserify/index.js"},{"name":"./lib/scmpCompare","loc":{"line":4,"column":28},"parent":"/Users/neilmills/fb-trading-point/node_modules/scmp/index.js","resolved":"/Users/neilmills/fb-trading-point/node_modules/scmp/lib/scmpCompare.js"},{"name":"buffer","parent":"/Users/neilmills/fb-trading-point/node_modules/scmp/index.js","resolved":"/Users/neilmills/fb-trading-point/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n'use strict'\n\nconst crypto = require('crypto')\nconst scmpCompare = require('./lib/scmpCompare')\n\n/**\n * Does a constant-time Buffer comparison by not short-circuiting\n * on first sign of non-equivalency.\n *\n * @param {Buffer} a The first Buffer to be compared against the second\n * @param {Buffer} b The second Buffer to be compared against the first\n * @return {Boolean}\n */\nmodule.exports = function scmp (a, b) {\n  // check that both inputs are buffers\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new Error('Both scmp args must be Buffers')\n  }\n\n  // return early here if buffer lengths are not equal since timingSafeEqual\n  // will throw if buffer lengths are not equal\n  if (a.length !== b.length) {\n    return false\n  }\n\n  // use crypto.timingSafeEqual if available (since Node.js v6.6.0),\n  // otherwise use our own scmp-internal function.\n  if (crypto.timingSafeEqual) {\n    return crypto.timingSafeEqual(a, b)\n  }\n\n  return scmpCompare(a, b)\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/scmp/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/scmp/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}}],"sources":{"node_modules/scmp/index.js":"'use strict'\n\nconst crypto = require('crypto')\nconst scmpCompare = require('./lib/scmpCompare')\n\n/**\n * Does a constant-time Buffer comparison by not short-circuiting\n * on first sign of non-equivalency.\n *\n * @param {Buffer} a The first Buffer to be compared against the second\n * @param {Buffer} b The second Buffer to be compared against the first\n * @return {Boolean}\n */\nmodule.exports = function scmp (a, b) {\n  // check that both inputs are buffers\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new Error('Both scmp args must be Buffers')\n  }\n\n  // return early here if buffer lengths are not equal since timingSafeEqual\n  // will throw if buffer lengths are not equal\n  if (a.length !== b.length) {\n    return false\n  }\n\n  // use crypto.timingSafeEqual if available (since Node.js v6.6.0),\n  // otherwise use our own scmp-internal function.\n  if (crypto.timingSafeEqual) {\n    return crypto.timingSafeEqual(a, b)\n  }\n\n  return scmpCompare(a, b)\n}\n"},"lineCount":35}},"error":null,"hash":"f2129db26cec0e12c13ceca023ac4566","cacheData":{"env":{}}}